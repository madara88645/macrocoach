[tool.poetry]
name = "macrocoach"
version = "0.1.0"
description = "An open-source coaching service that tracks health metrics and provides adaptive nutrition recommendations"
authors = ["Memo <memo@example.com>"]
readme = "README.md"
packages = [{include = "macrocoach", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
streamlit = "^1.28.1"
pandas = "^2.1.3"
numpy = "^1.25.2"
openai = "^1.3.0"
python-multipart = "^0.0.7"
aiofiles = "^23.2.1"
python-dotenv = "^1.0.0"
plotly = "^5.17.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
ruff = "^0.1.6"
black = "^23.11.0"
mypy = "^1.7.0"
pre-commit = "^3.5.0"

[tool.poetry.group.vision]
optional = true

[tool.poetry.group.vision.dependencies]
pillow = "^10.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88
select = ["E", "W", "F", "I", "N", "B", "UP"]
ignore = ["E203", "E501"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"
